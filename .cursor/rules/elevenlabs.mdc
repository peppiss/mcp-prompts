---
description:
globs:
alwaysApply: false
---
# ElevenLabs Service Usage Guide

This guide provides rules for interacting with the [src/elevenlabs-service.ts](mdc:src/elevenlabs-service.ts) to generate audio while optimizing for cost and quality.

---

### Core Principles

- **Cost-Effectiveness is Key**: The service is designed to be cost-effective by default. Always prioritize using the built-in optimization and caching features.
- **Quality is Adjustable**: Audio quality can be tuned using voice settings and model selection.

---

### Cost Optimization

1.  **Enable Caching**: Caching is enabled by default (`useCache: true`). Do not disable it unless you have a specific reason to re-generate the same audio. The cache key is generated from the text, voice, model, and settings, so identical requests will hit the cache, saving API calls and cost. The cache is stored in `cache/audio/`.

2.  **Rely on Text Optimization**: The `optimizeCost` flag (enabled by default) automatically runs `optimizeText` on your input. This function:
    *   Trims unnecessary whitespace.
    *   Splits long text into chunks of 5000 characters to fit API limits.
    *   This reduces the number of characters sent to the API, directly lowering costs.

3.  **Monitor Character Count**: Before running large jobs, use the `getCharacterCount()` method to check your remaining character quota to avoid unexpected billing.

---

### Quality Improvement

1.  **Tune Voice Settings**: The primary way to adjust audio quality is through voice settings in the `ElevenLabsConfig`:
    *   `stability` (0-1): Higher values make the voice more consistent but can sound robotic. Lower values are more expressive but can be unstable. The default is `0.5`. Start here and adjust in small increments.
    *   `similarity_boost` (0-1): Higher values make the voice sound more like the original voice, but can introduce artifacts. The default is `0.75`.

2.  **Select the Right Model**: The default model is `eleven_monolingual_v1`. Use the `getModels()` method to see if other models are available that might better suit your needs (e.g., multilingual models, different versions).

3.  **Choose a High-Quality Voice**: Use the `getVoices()` method to list available voices. Experiment with different voices to find one that best fits the desired narration style. The default voice is 'Adam' (`pNInz6obpgDQGcFmaJgB`).

---

### Example Usage

When calling `textToSpeech`, rely on the defaults for cost optimization. Only specify options when you need to override the default behavior for quality tuning.

```typescript
import { ElevenLabsService } from './src/elevenlabs-service';

const elevenLabs = new ElevenLabsService({ apiKey: 'YOUR_API_KEY' });

// Good - Relies on default caching and optimization
const audioPath = await elevenLabs.textToSpeech("This is a test.");

// Good for quality tuning - Overriding the voice
const highQualityPath = await elevenLabs.textToSpeech(
  "A high quality narration.",
  { voiceId: 'some_other_voice_id' }
);
```
