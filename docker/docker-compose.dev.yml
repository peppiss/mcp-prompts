# Development configuration for MCP Prompts

services:
  # Development MCP Prompts Server
  mcp-prompts-dev:
    build:
      context: .
      dockerfile: docker/Dockerfile.dev
    image: sparesparrow/mcp-prompts:dev
    container_name: mcp-prompts-dev
    environment:
      - NODE_ENV=development
      - STORAGE_TYPE=file
      - PROMPTS_DIR=/app/data/prompts
      - BACKUPS_DIR=/app/data/backups
      - LOG_LEVEL=debug
      - HTTP_SERVER=true
      - PORT=3004
      - HOST=0.0.0.0
    volumes:
      - .:/app
      - node_modules:/app/node_modules
      - mcp-dev-data:/app/data
    ports:
      - "3004:3004"
      - "9229:9229"
    command: npm run dev:watch
    restart: unless-stopped
    networks:
      - mcp-network

  # PostgreSQL for development
  postgres-dev:
    image: postgres:14-alpine
    container_name: mcp-postgres-dev
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: mcp_prompts_dev
    ports:
      - "5442:5432"
    volumes:
      - postgres_dev_data:/var/lib/postgresql/data
      - ./docker/postgres/init:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    networks:
      - mcp-network

volumes:
  node_modules:
  mcp-dev-data:
  postgres_dev_data:

