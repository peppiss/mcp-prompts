---
description: Rules for NPM package publishing workflow and validation
globs: ["package.json", "*.js", "src/**/*.{ts,js}", "dist/**/*.{js,d.ts}"]
---

# NPM Package Publishing Workflow

## Core Principles

1. Always validate your package locally before publishing
2. Follow semantic versioning for all releases
3. Clean, build, test, publish, validate installation

## Clean Build Process

When building the package, follow these steps in order:

```bash
# Step 1: Clean previous builds
npm run clean

# Step 2: Build the package
npm run build

# Step 3: Publish to npm registry
npm publish
```

## Clean Installation Validation

After publishing, ALWAYS verify installation from the registry:

```bash
# Step 1: Remove local installation to ensure clean test
rm -rf /home/sparrow/.nvm/versions/node/v23.7.0/lib/node_modules/@sparesparrow/mcp-prompts/

# Step 2: Install globally from registry
npm install -g @sparesparrow/mcp-prompts

# Step 3: Verify execution
npx -y @sparesparrow/mcp-prompts
```

## Version Management

1. Use semantic versioning (MAJOR.MINOR.PATCH)
2. Update version in package.json before publishing:

```json
{
  "name": "@sparesparrow/mcp-prompts",
  "version": "1.2.3", // Increment appropriately
  ...
}
```

## Common Publishing Issues

When encountering publishing errors:

1. Check npm token: `npm token list`
2. Verify package name is available: `npm view @sparesparrow/mcp-prompts`
3. Ensure you have proper access rights: `npm access ls-packages`
4. Inspect package contents before publishing: `npm pack`
5. Validate package.json:
   - Required fields: name, version, main, types/typings
   - Files array must include all necessary files
   - Dependencies must use compatible version ranges

## Publishing Process Decision Tree

1. Is this a breaking change?
   - Yes → Increment MAJOR version
   - No → Continue to next question
2. Does this add new functionality?
   - Yes → Increment MINOR version
   - No → Continue to next question
3. Is this a bug fix or patch?
   - Yes → Increment PATCH version
   - No → Consider if release is necessary

## Iterative Delivery Checklist

Before merging feature branches to main:

- [ ] Run clean, build, test cycle
- [ ] Publish to npm
- [ ] Verify global installation
- [ ] Test executed package
- [ ] If all tests pass, proceed with next feature
- [ ] If any tests fail, fix issues before continuing 