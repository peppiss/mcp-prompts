name: Build, Test & Publish Docker Image (Multi-Arch)

on:
  push:
    branches: [main]
    tags: ['v*.*.*']
  pull_request:
    branches: [main]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up QEMU (multi-arch)
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build and push multi-arch image
        id: build-and-push
        uses: docker/build-push-action@v5
        with:
          context: .
          file: docker/Dockerfile.prod
          platforms: linux/amd64,linux/arm64
          push: true
          provenance: true
          sbom: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  test-image:
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      - name: Pull image (amd64)
        run: |
          docker pull ghcr.io/${{ github.repository }}:latest
      - name: Run container
        run: |
          docker run -d --name mcp-prompts-test -p 8080:8080 ghcr.io/${{ github.repository }}:latest
      - name: Wait for health endpoint
        run: |
          for i in {1..20}; do
            if curl -fs http://localhost:8080/health; then
              echo 'Health endpoint OK'; exit 0;
            fi
            sleep 2
          done
          echo 'Health endpoint failed'; docker logs mcp-prompts-test; exit 1
      - name: Cleanup
        if: always()
        run: |
          docker rm -f mcp-prompts-test || true
